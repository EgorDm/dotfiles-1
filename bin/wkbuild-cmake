#! /bin/bash
#
# wkbuild-cmake
# Copyright (C) 2017 Adrian Perez <aperez@igalia.com>
#
# Distributed under terms of the MIT license.
#
set -e

# Defaults.
declare -i parallel_jobs=$(getconf _NPROCESSORS_ONLN)
use_icecc=false
buildtype='Release'
port='GTK'
prefix=''
python_exe=''


die () {
	echo "$*" 1>&2
	exit 1
}

info () {
	local item=$1
	shift
	printf -- "[1;1m%10s[0;0m â†’ %s\n" "${item}" "$*"
}

do_help () { cat <<EOM
Usage: $(basename "$0") [options]

Available options:

  --jobs=N           Use N parallel jobs.
  --debug, --dbg     Make a debug build.
  --release, --rel   Make a release build (default).
  --python=PATH      Path to a Python 2.x executable (default: auto).
  --prefix=PATH      Set the installation prefix
                     (default: ${JHENV}).

Unrecognized options are passed down to CMake.
EOM
}

declare -a cmakeargs=( -G Ninja
	'-DENABLE_GLES2=ON'
	'-DENABLE_GTK_DOC=OFF'
	'-DENABLE_MINIBROWSER=ON'
	'-DENABLE_PLUGIN_PROCESS_GTK2=OFF'
)

# Parse command line arguments.
for flag in "$@"
do
	case ${flag} in
		--gtk) port='GTK' ;;
		--prefix=*) prefix=${flag#*=} ;;
		--jobs=*) parallel_jobs=${flag#*=} ;;
		--debug | --dbg) buildtype='Debug' ;;
		--release | --rel) buildtype='Release' ;;
		--python=*) python_exe=${flag#*=} ;;
		--icecc) use_icecc=true ;;
		--help | -h) do_help ; exit 0 ;;
		*) cmakeargs+=( "${flag}" ) ;;
	esac
done

if [[ -z ${prefix} && -z ${JHENV} ]] ; then
	die 'Build prefix not specified, use --prefix or set $JHENV'
elif [[ -z ${prefix} ]] ; then
	prefix=${JHENV}
fi

if [[ -z ${python_exe} ]] ; then
	for name in python2.7 python2 python ; do
		python_exe=$(type -P "${name}")
		if [[ -x ${python_exe} ]] ; then
			break
		fi
	done
else
	python_exe=$(type -P "${python_exe}")
fi
if [[ ! -x ${python_exe} ]] ; then
	die 'Could not find a suitable Python 2.x interpreter'
fi

cmakeargs+=( "-DPORT=${port}" )
cmakeargs+=( "-DCMAKE_BUILD_TYPE=${buildtype}" )
cmakeargs+=( "-DPYTHON_EXECUTABLE=${python_exe}" )
cmakeargs+=( "-DCMAKE_INSTALL_PREFIX=${prefix}" )
cmakeargs+=( "-DLIB_INSTALL_DIR=${prefix}/lib" )
cmakeargs+=( "-DLIBEXEC_INSTALL_DIR=${prefix}/lib/webkit2gtk-4.0" )

info CMAKE "${cmakeargs[*]}"
cmake "${cmakeargs[@]}" ..

info NINJA "-j${parallel_jobs}"
ninja -j${parallel_jobs}

info NINJA install
ninja install
